import pygame
import sys
import threading
import subprocess
import tkinter as tk
from tkinter import ttk
import time

# Inicializar pygame
pygame.init()

# Configuración de la ventana
root = tk.Tk()
root.overrideredirect(True)  # Deshabilita la barra de título
ventana_ancho = 400
ventana_alto = 300
ventana = pygame.display.set_mode((ventana_ancho, ventana_alto))
pygame.display.set_caption("Preloader")


# Colores
blanco = (255, 255, 255)
negro = (0, 0, 0)

# Cargar recursos
# Simulación de carga de recursos
cargar_recursos = True

# Loop principal
while cargar_recursos:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            pygame.quit()
            sys.exit()

    # Dibujar el preloader
    ventana.fill(blanco)
    pygame.draw.circle(ventana, negro, (ventana_ancho // 2, ventana_alto // 2), 50)
    
    # Simulación de carga completa (después de un tiempo determinado)
    pygame.display.flip()
    pygame.time.delay(5000)  # Simulación de carga durante 5 segundos
    cargar_recursos = False

# Cerrar pygame
pygame.quit()

# Inicio App

class PreloaderApp:
    def __init__(self, root):
        self.root = root
        self.root.title("Preloader App")
        
        self.label = ttk.Label(root, text="Cargando...", font=("Helvetica", 16))
        self.label.pack(pady=20)
        
        self.progressbar = ttk.Progressbar(root, mode="indeterminate", length=200)
        self.progressbar.pack()
        
        self.close_button = ttk.Button(root, text="Cerrar", command=self.close)
        self.close_button.pack(pady=10)
        
        self.progressbar.start(10)  # Inicia la animación de la barra de progreso
        
        self.load_data()  # Simulación de carga de datos

    def load_data(self):
        # Simulación de carga de datos
        time.sleep(5)
        self.progressbar.stop()
        self.label.config(text="Carga completada")
        #self.close_button.config(state=tk.NORMAL)  # Habilitar el botón de cierre

    def close(self):
        self.root.destroy()  # Cerrar la ventana
        subprocess.run(["python", "otro_programa.py"])  # Ejecutar otro programa Python

def main():
    root = tk.Tk()
    app = PreloaderApp(root)
    root.mainloop()

if __name__ == "__main__":
    main()